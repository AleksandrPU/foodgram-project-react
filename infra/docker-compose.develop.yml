version: '3.3'

volumes:
  pg_data:
#  static:
#  media:

services:
  db:
    image: postgres:13
    env_file: ../.env.dev
    volumes:
      - pg_data:/var/lib/postgresql/data
#    user: 1000:1000

  backend:
    build:
      context: ../backend/
    ports:
      - "8000:8000"
    env_file: ../.env.dev
    volumes:
      - ../backend:/app
#    command: >
#      sh -c "python manage.py runserver 0.0.0.0:8000"
#    command: python manage.py runserver 0.0.0.0:8000
#    command: gunicorn --bind 0.0.0.0:8000 foodgram_backend.wsgi
    depends_on:
      - db
#    user: 1000:1000

#  frontend:
#    image: aleksup/foodgram_frontend
#    volumes:
#      - ../frontend/:/app/result_build/
#
#  nginx:
#    image: nginx:1.19.3
#    ports:
#      - 8080:80
#    depends_on:
#      - backend
#      - frontend
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - ../frontend/build:/usr/share/nginx/html/
#      - ../docs/:/usr/share/nginx/html/api/docs/
#      - static:/var/html/static/
#      - media:/var/html/media/

  redis:
    image: redis:7.2.4-alpine
    # hostname: redis
#    user: 1000:1000

  worker:
    build:
      context: ../backend/
    env_file: ../.env.dev
    # hostname: celery
    # entrypoint: celery
    # command: -A celery worker --loglevel=INFO
    command: "celery -A foodgram_backend worker --loglevel=INFO"
    volumes:
      - ../backend:/app
    # links:
    #   - redis
    depends_on:
      - redis
      - backend
#    user: 1000:1000

#   flower:
#     build:
#       context: ../backend/
#     hostname: flower
#     entrypoint: celery
#     command: -A celery flower
#     volumes:
#       - ../backend:/app
#     links:
#       - redis
#     depends_on:
#       - redis
#     ports:
#       - "5555:5555"
